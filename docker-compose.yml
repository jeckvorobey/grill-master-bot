version: "3.8"

services:
  db:
    image: postgres:12
    container_name: dtb_postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    env_file:
      - ./.env
    ports:
      - "5433:5432"
  redis:
    image: redis:alpine
    container_name: dtb_redis
  web:
    build:
      context: .
      dockerfile: LocalDockerfile
    container_name: dtb_django
    restart: always
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - db
  ngrok:
    image: wernight/ngrok
    container_name: dtb_ngrok
    ports:
      - "4040:4040"
    environment:
      - NGROK_AUTHTOKEN=2bDeciZXcS59kPhh4X7BabmdsvV_pAp7aMzgvJoWjy8xjHZ3
    command: sh -c "ngrok authtoken $$NGROK_AUTHTOKEN && ngrok http web:8000"
    depends_on:
      - web
  webapp:
    build:
      context: .
      dockerfile: ./web/Dockerfile
    container_name: dtb_webapp
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./web:/app
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - web
  bot:
    build:
      context: .
      dockerfile: LocalDockerfile
    container_name: dtb_bot
    restart: always
    command: python run_polling.py
    env_file:
      - ./.env
    depends_on:
      - web
  celery:
    build:
      context: .
      dockerfile: LocalDockerfile
    container_name: dtb_celery
    restart: always
    command: celery -A dtb worker --loglevel=INFO
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - redis
      - web
  celery-beat:
    build:
      context: .
      dockerfile: LocalDockerfile
    container_name: dtb_beat
    restart: always
    command: celery -A dtb beat -l info --scheduler django_celery_beat.schedulers.DatabaseScheduler
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - redis
      - celery
      - web

volumes:
  postgres_data:
